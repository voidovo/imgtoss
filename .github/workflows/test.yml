name: 测试流水线

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-frontend:
    name: 前端测试
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 设置 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 类型检查
        run: pnpm run build

      - name: ESLint 检查
        run: pnpm run lint

      # 暂时屏蔽前端测试，等测试系统完善后再启用
      # - name: 运行前端测试
      #   run: pnpm run test:run

  test-backend:
    name: 后端测试
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: 安装系统依赖 (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: 格式检查
        run: cargo fmt --all --manifest-path src-tauri/Cargo.toml -- --check

      - name: Clippy 检查
        run: cargo clippy --manifest-path src-tauri/Cargo.toml --all-targets --all-features -- -D warnings

      # 暂时屏蔽后端测试，等测试系统完善后再启用
      # - name: 运行后端测试
      #   run: cargo test --manifest-path src-tauri/Cargo.toml

  integration-test:
    name: 集成测试
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 安装 Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 构建前端
        run: pnpm run build

      # 暂时屏蔽集成测试，等测试系统完善后再启用
      # - name: 测试 Tauri 构建
      #   run: pnpm tauri build --debug

      - name: 验证构建环境
        run: |
          echo "✅ 前端构建完成"
          echo "✅ Rust 环境就绪"
          echo "✅ 系统依赖已安装"
          echo "🔄 集成测试已暂时屏蔽，等待测试系统完善"